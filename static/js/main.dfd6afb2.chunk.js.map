{"version":3,"sources":["Components/Header.js","Components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","Component","TableOfData","datachange","studentdata","useState","searchValue","setsearchValue","type","placeholder","onChange","event","target","value","filter","contact","name","toLowerCase","includes","map","dateOfBarth","nationality","GPA1","GPA2","Report","sum1","sum2","avg1","avg2","numStudent","jordainian","other","show","setShow","c","parseInt","console","log","onClick","Form","data","contacts","setContacts","addFormdata","setaddFormdata","handleAddFormChange","preventDefault","fieldName","getAttribute","fieldValue","newFormData","handleFormSubmit","newValue","newContacts","onSubmit","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfd6afb2.chunk.js","sourcesContent":["import React,{Component} from \"react\";\nimport \"./Header.css\"\nclass Header extends Component {\n    render(){\n        return(\n            <div className=\"HeaderContainer\">\n                <img className=\"Headerimg\" src=\"/image/logomadrasaty.png\" />\n                <h5>Madrasaty Students Record</h5>\n            </div>\n        )\n    }\n}\nexport default Header","import React ,{useState, setState} from \"react\";\nimport \"./Table.css\"\n//use mock data to make more readable and clear\nimport data from \"./mockdata.json\"\n\n// the Main component that contain a form and pass the data that come to other component\nconst Form = () =>{\n\n    const [contacts,setContacts]=useState(data)\n    const [addFormdata,setaddFormdata]=useState({\n        name:'',\n        dateOfBarth:'',\n        nationality:'',\n        GPA1:'',\n        GPA2:'',\n    })\n\n// this event function to fetch the data from the input feilds then sign it to state \nconst handleAddFormChange = (event) => {\n        event.preventDefault();\n    \n        const fieldName = event.target.getAttribute(\"name\");\n        const fieldValue = event.target.value;\n    \n        const newFormData = { ...addFormdata };\n        newFormData[fieldName] = fieldValue;\n    \n        setaddFormdata(newFormData);\n      };\n\n    const handleFormSubmit = (event) =>{\n        event.preventDefault();\n\n        const newValue={\n        name:addFormdata.name,\n        dateOfBarth:addFormdata.dateOfBarth,\n        nationality:addFormdata.nationality,\n        GPA1:addFormdata.GPA1,\n        GPA2:addFormdata.GPA2,\n        }\n\n        const newContacts = [...contacts,newValue]\n        setContacts(newContacts);\n      }\n\n      const [show,setShow]=useState(false)\n\n    return(\n        <div className=\"Tablecontainer\"> \n            \n            <div className=\"FormComponent\">\n            <form onSubmit={handleFormSubmit}>\n                <input type=\"text\" name=\"name\" required=\"required\" placeholder=\"First and last name\" onChange={handleAddFormChange}/>\n                <input type=\"text\" name=\"dateOfBarth\" required=\"required\" placeholder=\"day/month/year\" onChange={handleAddFormChange}/>\n                <input type=\"text\" name=\"nationality\" required=\"required\" placeholder=\"Nationality\" onChange={handleAddFormChange}/>\n                <input type=\"number\" name=\"GPA1\" required=\"required\" placeholder=\"GPA last year\" onChange={handleAddFormChange}/>\n                <input type=\"number\" name=\"GPA2\" required=\"required\" placeholder=\"GPA this year\" onChange={handleAddFormChange}/>\n                <button type=\"submit\">Submit</button>\n            </form></div>\n        \n            <div className=\"tableSearch\">\n                <TableOfData studentdata={contacts} datachange={handleFormSubmit} />\n            </div>\n            <div className=\"tableSearch\">\n                <Report studentdata={contacts} datachange={handleFormSubmit}/>\n            </div>\n        </div>\n    )\n}\n\n// this component for represent the data in table also this component has a search field with search functionality\nconst TableOfData =({datachange,studentdata})=>{\n    // console.log(studentdata)\n    const[searchValue, setsearchValue]=useState(\"\");\n    \n    return(\n        <div>\n        <input type=\"text\" placeholder=\"search by name\" onChange={(event=>{setsearchValue(event.target.value)})}/>\n        {/* {console.log(searchValue)} */}\n        <table>\n        <thead>\n            <tr className=\"headoftable\">\n                <th className=\"name\">Name</th>\n                <th>date of birth</th>\n                <th>nationality</th>\n                <th>GPA last year</th>\n                <th>GPA this year</th>\n            </tr>\n        </thead>\n        </table>\n        {\n            // search functionality \n            studentdata.filter((contact)=>{\n                if(searchValue==\"\"){\n                    // console.log(studentdata)\n                    return contact\n                }else if(contact.name.toLowerCase().includes(searchValue.toLowerCase())){\n                    return contact\n                }\n            }).map((contact)=>{\n                return(\n                    <table>\n\n                        <tbody>\n                            <tr>\n                                <th className=\"name\" onChange={datachange}>{contact.name}</th>\n                                <th onChange={datachange}>{contact.dateOfBarth}</th>\n                                <th onChange={datachange}>{contact.nationality}</th>\n                                <th onChange={datachange}>{contact.GPA1}</th>\n                                <th onChange={datachange}>{contact.GPA2}</th>\n                            </tr>\n                        </tbody>\n                    </table>\n                );\n            })\n        }\n        \n    </div>\n    )\n}\n\n// this component to represent statistic in report using some calculation and statistic\nconst Report = ({datachange,studentdata})=>{\n    // console.log(studentdata)\n   let sum1=0\n   let sum2=0\n   let avg1=0\n   let avg2=0\n   let numStudent=0\n   let jordainian=0\n   let other=0\n   const [show,setShow]=useState(false)\n    return(\n        <div className=\"reportcontainer\">\n            {studentdata.map((value , c)=>{\n                sum1=sum1+parseInt(value.GPA1)\n                sum2=sum2+parseInt(value.GPA2)\n                console.log(sum1,sum2)\n                numStudent=c+1\n                avg1=sum1/numStudent\n                avg2=sum2/numStudent\n                if(value.nationality.toLowerCase() == \"jordainian\"){\n                    jordainian=jordainian+1\n                }else{other=other+1}\n            })}\n            <button onClick={()=>setShow(!show)}>Summery</button>\n          {show ? <div className=\"reportinsidecontainer\"> \n                <h3>Report of the records:</h3>\n                <p>- Student Number is: {numStudent}</p>\n                <p>- The average of GPA last year is: {avg1}</p>\n                <p>- The average of GPA this year is: {avg2}</p>\n                <p>- Jordainian nationality students: {jordainian}</p>\n                <p>- Other nationality students: {other}</p>\n            </div>:null}\n    </div>\n    )\n}\n\nexport default Form","import './App.css';\nimport Header from './Components/Header'\nimport Form from './Components/Table';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Form/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}